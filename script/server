#!/bin/bash 
#-x to print commands

[ -z "$WORKING_DIR" ] && export WORKING_DIR=$(pwd)

. "$WORKING_DIR"/script/_env

echo "********* Start a Dnsmasq Container running on the service$ID machine"
eval $(docker-machine env "service$ID")
docker run -d --name 'dnsmasq.local' -p 53:53 -p 53:53/udp --cap-add=NET_BIND_SERVICE --cap-add=NET_ADMIN --cap-add=NET_RAW \
	dnsmasq-eureka /etc/dnsmasq.conf -i eth0 -i eth1 -8 -
	
# used by eureka
dockerPull jeanblanchard/tomcat:8

echo "********* Building and Running Eureka containers"
cd "$WORKING_DIR"/eureka1
any_network_=$(echo "$EUREKA_ZONES" | awk '{print $1}')
h_=1
for i in $EUREKA_ZONES; do
	cname_=$(echo "$EUREKA_CNAMES"|awk '{print $'$h_'}')
	eval $(docker-machine env "host${ID}$i") 

	echo "********* Building container: docker-eureka"
	dockerBuildUsingRegistry docker-eureka "$WORKING_DIR"/eureka1

	docker ps -a | grep -q "eureka${ID}$i"
	if [ $? -ne 0 ] ; then
		docker run -d -h "$cname_" --name "$cname_" --dns=$(docker-machine ip "service$ID") --net="$NETS" -p "808$h_":8080 docker-eureka
	else
		echo "eureka${ID}$i not created because already exists :)"
		docker start "eureka${ID}$i" >/dev/null 2>/dev/null
	fi	
	let h_++
done
echo "********* Building and Running Node containers"
dockerPull gliderlabs/alpine
for i in $EUREKA_ZONES; do
	eval $(docker-machine env "host${ID}$i") 
	docker ps -a | grep "node${ID}$i" >/dev/null
	if [ $? -ne 0 ] ; then
		docker run -d --name="node${ID}$i" --net="${NETS}" gliderlabs/alpine sh -c "sleep 3000"
		docker network connect "${NETP}" "node${ID}$i"
	else
		echo "node${ID}$i not created because already exists :)"
		docker start "node${ID}$i" >/dev/null 2>/dev/null
	fi	
done



#eval $(docker-machine env "eureka${ID}b") && docker run -d -h '10-10-0-3.zone-b.eureka.local' --dns=$(docker-machine ip dns$ID) --net=eureka_$ID -p 8080:8080 docker-eureka
#eval $(docker-machine env "eureka${ID}b") && docker run -d -h '10-10-0-4.zone-c.eureka.local' --dns=$(docker-machine ip dns$ID) --net=eureka_$ID -p 8080:8080 docker-eureka

#for i in a b c; do eval $(docker-machine env eureka001$i) && docker stop $(docker ps -q); done
